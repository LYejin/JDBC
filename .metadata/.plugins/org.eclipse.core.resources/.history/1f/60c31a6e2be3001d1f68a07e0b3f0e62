package DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import DTO.Emp;
import UTILS.SingletonHelper;

public class EmpDao {
	private Connection conn;
	private PreparedStatement pstmt;
	private ResultSet rs;
	
	public EmpDao() {
		conn =null;
		pstmt=null;
		rs=null;
	}
	
	public void empSetting() {
		conn=null;
		pstmt=null;
		rs=null;
	}
	
	//1. 전체조회
	public List<Emp> getEmpAllList() {
		List<Emp> empList = new ArrayList<>();
		empSetting();
		try {
			conn = SingletonHelper.getConnection("oracle");
			String str = "select * from emp";
			pstmt = conn.prepareStatement(str);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				Emp emp = new Emp();
				emp.setEmpno(rs.getInt("empno"));
				emp.setEname(rs.getString("ename"));
				emp.setJob(rs.getString("job"));
				emp.setMgr(rs.getInt("mgr"));
				emp.setHiredate(rs.getDate("hiredate"));
				emp.setSal(rs.getInt("sal"));
				emp.setComm(rs.getInt("comm"));
				emp.setDeptno(rs.getInt("deptno"));
				empList.add(emp);
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			SingletonHelper.close(pstmt);
			SingletonHelper.close(rs);
		}
		return empList;
	}
	
	//2. 조건조회
	public Emp getEmp(int empno) {
		Emp emp = null;
		empSetting();
		try {
			conn = SingletonHelper.getConnection("oracle");
			String str = "select * from emp where empno=?";
			pstmt = conn.prepareStatement(str);
			pstmt.setInt(1, empno);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				emp = new Emp();
				emp.setEmpno(rs.getInt("empno"));
				emp.setEname(rs.getString("ename"));
				emp.setJob(rs.getString("job"));
				emp.setMgr(rs.getInt("mgr"));
				emp.setHiredate(rs.getDate("hiredate"));
				emp.setSal(rs.getInt("sal"));
				emp.setComm(rs.getInt("comm"));
				emp.setDeptno(rs.getInt("deptno"));
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			SingletonHelper.close(pstmt);
			SingletonHelper.close(rs);
		}
		return emp;
	}
	
	//3. 삽입
	public int insertEmp(Emp emp) {
		empSetting();
		try {
			conn = SingletonHelper.getConnection("oracle");
			String str = "insert into emp(empno, ename, job, mgr, hiredate, sal, comm, deptno) values(?,?,?,?,?,?,?,?)";
			pstmt = conn.prepareStatement(str);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				Emp emp = new Emp();
				emp.setEmpno(rs.getInt("empno"));
				emp.setEname(rs.getString("ename"));
				emp.setJob(rs.getString("job"));
				emp.setSal(rs.getInt("sal"));
				emp.setHiredate(rs.getDate("hiredate"));
				empList.add(emp);
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			SingletonHelper.close(pstmt);
			SingletonHelper.close(rs);
		}
		return empList;
	}
	
	
	
	//4. 삭제
	public List<Emp> getEmpAllList() {
		List<Emp> empList = new ArrayList<>();
		empSetting();
		try {
			conn = SingletonHelper.getConnection("oracle");
			String str = "select * from emp";
			pstmt = conn.prepareStatement(str);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				Emp emp = new Emp();
				emp.setEmpno(rs.getInt("empno"));
				emp.setEname(rs.getString("ename"));
				emp.setJob(rs.getString("job"));
				emp.setSal(rs.getInt("sal"));
				emp.setHiredate(rs.getDate("hiredate"));
				empList.add(emp);
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			SingletonHelper.close(pstmt);
			SingletonHelper.close(rs);
		}
		return empList;
	}
	
	//5. 수정
	public List<Emp> getEmpAllList() {
		List<Emp> empList = new ArrayList<>();
		empSetting();
		try {
			conn = SingletonHelper.getConnection("oracle");
			String str = "select * from emp";
			pstmt = conn.prepareStatement(str);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				Emp emp = new Emp();
				emp.setEmpno(rs.getInt("empno"));
				emp.setEname(rs.getString("ename"));
				emp.setJob(rs.getString("job"));
				emp.setSal(rs.getInt("sal"));
				emp.setHiredate(rs.getDate("hiredate"));
				empList.add(emp);
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			SingletonHelper.close(pstmt);
			SingletonHelper.close(rs);
		}
		return empList;
	}
	
	
	
	//6. 이름검색 
	public List<Emp> getEmpAllList() {
		List<Emp> empList = new ArrayList<>();
		empSetting();
		try {
			conn = SingletonHelper.getConnection("oracle");
			String str = "select * from emp";
			pstmt = conn.prepareStatement(str);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				Emp emp = new Emp();
				emp.setEmpno(rs.getInt("empno"));
				emp.setEname(rs.getString("ename"));
				emp.setJob(rs.getString("job"));
				emp.setSal(rs.getInt("sal"));
				emp.setHiredate(rs.getDate("hiredate"));
				empList.add(emp);
			}
		} catch (Exception e) {
			System.out.println(e.getMessage());
		} finally {
			SingletonHelper.close(pstmt);
			SingletonHelper.close(rs);
		}
		return empList;
	}
	
	
}
